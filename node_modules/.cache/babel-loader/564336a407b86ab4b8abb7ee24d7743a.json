{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * React Scheduler wrapper\n */\n\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // We import scheduler.umd for IE11 compatibility only. If you don't use IE import:\n// import { Scheduler, ObjectHelper, Widget } from 'bryntum-scheduler';\n\nimport { Scheduler, ObjectHelper, Widget } from 'bryntum-scheduler/scheduler.umd'; // Defines a React component that wraps Bryntum Scheduler\n\nvar BryntumScheduler = /*#__PURE__*/function (_Component) {\n  _inherits(BryntumScheduler, _Component);\n\n  var _super = _createSuper(BryntumScheduler);\n\n  function BryntumScheduler() {\n    var _this;\n\n    _classCallCheck(this, BryntumScheduler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.featureRe = /Feature$/;\n    _this.features = ['cellEditFeature', 'cellMenuFeature', 'cellTooltipFeature', 'columnDragToolbarFeature', 'columnLinesFeature', 'columnPickerFeature', 'columnReorderFeature', 'columnResizeFeature', 'dependenciesFeature', 'dependencyEditFeature', 'eventDragCreateFeature', 'eventDragFeature', 'eventDragSelectFeature', 'eventEditFeature', 'eventFilterFeature', 'eventMenuFeature', 'eventResizeFeature', 'eventTooltipFeature', 'filterBarFeature', 'filterFeature', 'groupFeature', 'groupSummaryFeature', 'headerMenuFeature', 'headerZoomFeature', 'labelsFeature', 'nonWorkingTimeFeature', 'panFeature', 'pdfExportFeature', 'quickFindFeature', 'regionResizeFeature', 'resourceTimeRangesFeature', 'rowReorderFeature', 'scheduleMenuFeature', 'scheduleTooltipFeature', 'searchFeature', 'simpleEventEditFeature', 'sortFeature', 'stripeFeature', 'summaryFeature', 'timeAxisHeaderMenuFeature', 'timeRangesFeature', 'treeFeature'];\n    _this.configs = ['allowOverlap', 'animateRemovingRows', 'assignments', 'assignmentStore', 'autoAdjustTimeAxis', 'autoHeight', 'barMargin', 'columnLines', 'columns', 'contextMenuTriggerEvent', 'createEventOnDblClick', 'crudManager', 'defaultResourceImageName', 'dependencyStore', 'disableGridRowModelWarning', 'displayDateFormat', 'emptyText', 'enableDeleteKey', 'enableEventAnimations', 'enableRecurringEvents', 'enableTextSelection', 'endDate', 'endParamName', 'eventBarTextField', 'eventBodyTemplate', 'eventColor', 'eventLayout', 'eventRenderer', 'events', 'eventSelectionDisabled', 'eventStore', 'eventStyle', 'fillLastColumn', 'fillTicks', 'fullRowRefresh', 'hasVisibleEvents', 'height', 'hideHeaders', 'horizontalEventSorterFn', 'loadMask', 'longPressTime', 'maintainSelectionOnDatasetChange', 'managedEventSizing', 'maxHeight', 'maxWidth', 'maxZoomLevel', 'milestoneAlign', 'milestoneCharWidth', 'milestoneLayoutMode', 'minHeight', 'minWidth', 'minZoomLevel', 'mode', 'multiEventSelect', 'partner', 'passStartEndParameters', 'presets', 'readOnly', 'removeUnassignedEvent', 'resizeToFitIncludesHeader', 'resourceColumns', 'resourceImagePath', 'resourceMargin', 'resources', 'resourceStore', 'resourceTimeRanges', 'responsiveLevels', 'rowHeight', 'scrollLeft', 'scrollTop', 'selectedEvents', 'selectionMode', 'showDirty', 'snap', 'snapRelativeToEventStartDate', 'startDate', 'startParamName', 'subGridConfigs', 'tickWidth', 'timeRanges', 'timeResolution', 'triggerSelectionChangeOnRemove', 'useInitialAnimation', 'viewportCenterDate', 'viewPreset', 'weekStartDay', 'width', 'workingTime', 'zoomLevel', 'zoomOnMouseWheel', 'zoomOnTimeAxisDoubleClick'];\n    _this.state = {\n      portals: new Set(),\n      // Needed to trigger refresh when portals change\n      generation: 0\n    };\n    return _this;\n  }\n\n  _createClass(BryntumScheduler, [{\n    key: \"schedulerEngine\",\n    get:\n    /**\n     * @deprecated in favor of schedulerInstance\n     */\n    function get() {\n      console.warn('schedulerEngine is deprecated. Use schedulerInstance instead.');\n      return this.schedulerInstance;\n    } // Defaults for scheduler the scheduler wrapper\n\n  }, {\n    key: \"releaseReactCell\",\n    value:\n    /**\n     * Removes the unused portal (if discardPortals prop is true) or\n     * hides the unused portal (if discardPortals is falsie - default)\n     * @param {HTMLElement} cellElement\n     * @private\n     */\n    function releaseReactCell(cellElement) {\n      var cellElementData = cellElement._domData,\n          portalHolder = cellElement._domData.portalHolder; // Cell already has a react component in it; hide it or remove it\n\n      if (portalHolder) {\n        // Remove portal and its element\n        if (this.props.discardPortals) {\n          var state = this.state,\n              portalHolderMap = this.portalHolderMap; // Remove React portal\n\n          state.portals.delete(portalHolder.portal); // Remove portalHolder from both map and DOM\n\n          portalHolderMap.delete(portalHolder.portal.key);\n          portalHolder.remove();\n          cellElementData.portalHolder = null; // Update state so that React knows something changed\n\n          this.setState({\n            generation: state.generation++\n          });\n        } else {\n          // Hide the portal\n          portalHolder.style.display = 'none';\n        }\n      }\n    } // React component rendered to DOM, render scheduler to it\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var props = this.props,\n          config = {\n        // Use this element as our encapsulating element\n        adopt: this.el,\n        callOnFunctions: true,\n        features: {},\n        // Hook called by engine when requesting a cell editor\n        processCellEditor: function processCellEditor(_ref) {\n          var editor = _ref.editor,\n              field = _ref.field; // String etc handled by feature, only care about fns returning React components here\n\n          if (typeof editor !== 'function') {\n            return;\n          } // Wrap React editor in an empty widget, to match expectations from CellEdit/Editor and make alignment\n          // etc. work out of the box\n\n\n          var wrapperWidget = new Widget({\n            name: field // For editor to be hooked up to field correctly\n\n          }); // Ref for accessing the React editor later\n\n          wrapperWidget.reactRef = React.createRef(); // column.editor is expected to be a function returning a React component (can be JSX). Function is\n          // called with the ref from above, it has to be used as the ref for the editor to wire things up\n\n          var reactComponent = editor(wrapperWidget.reactRef);\n\n          if (reactComponent.$$typeof !== Symbol.for('react.element')) {\n            throw new Error('Expect a React element');\n          }\n\n          var editorValidityChecked = false; // Add getter/setter for value on the wrapper, relaying to getValue()/setValue() on the React editor\n\n          Object.defineProperty(wrapperWidget, 'value', {\n            enumerable: true,\n            get: function get() {\n              return wrapperWidget.reactRef.current.getValue();\n            },\n            set: function set(value) {\n              var component = wrapperWidget.reactRef.current;\n\n              if (!editorValidityChecked) {\n                var misses = ['setValue', 'getValue', 'isValid', 'focus'].filter(function (fn) {\n                  return !(fn in component);\n                });\n\n                if (misses.length) {\n                  throw new Error(\"\\n                                        Missing function\".concat(misses.length > 1 ? 's' : '', \" \").concat(misses.join(', '), \" in \").concat(component.constructor.name, \".\\n                                        Cell editors must implement setValue, getValue, isValid and focus\\n                                    \"));\n                }\n\n                editorValidityChecked = true;\n              }\n\n              var context = wrapperWidget.owner.cellEditorContext;\n              component.setValue(value, context);\n            }\n          }); // Add getter for isValid to the wrapper, mapping to isValid() on the React editor\n\n          Object.defineProperty(wrapperWidget, 'isValid', {\n            enumerable: true,\n            get: function get() {\n              return wrapperWidget.reactRef.current.isValid();\n            }\n          }); // Override widgets focus handling, relaying it to focus() on the React editor\n\n          wrapperWidget.focus = function () {\n            wrapperWidget.reactRef.current.focus && wrapperWidget.reactRef.current.focus();\n          }; // Create a portal, making the React editor belong to the React tree although displayed in a Widget\n\n\n          var portal = ReactDOM.createPortal(reactComponent, wrapperWidget.element);\n          wrapperWidget.reactPortal = portal;\n          var state = _this2.state; // Store portal in state to let React keep track of it (inserted into the Grid component)\n\n          state.portals.add(portal);\n\n          _this2.setState({\n            portals: state.portals,\n            generation: state.generation + 1\n          });\n\n          return {\n            editor: wrapperWidget\n          };\n        },\n        // Hook called by engine when rendering cells, creates portals for JSX supplied by renderers\n        processCellContent: function processCellContent(_ref2) {\n          var cellContent = _ref2.cellContent,\n              cellElement = _ref2.cellElement,\n              cellElementData = _ref2.cellElementData,\n              record = _ref2.record;\n          var shouldSetContent = cellContent != null; // Release any existing React component (remove or hide)\n\n          _this2.releaseReactCell(cellElement); // Detect React component\n\n\n          if (cellContent && cellContent.$$typeof === Symbol.for('react.element')) {\n            // Excluding special rows for now to keep renderers simpler\n            if (!record.meta.specialRow) {\n              var state = _this2.state,\n                  portalHolderMap = _this2.portalHolderMap,\n                  portalId = \"portal-\".concat(record.id, \"-\").concat(cellElementData.columnId); // Get already existing portal holder, exists if cell was previously rendered\n\n              var existingPortalHolder = portalHolderMap.get(portalId); // Record changed, we need a new portal\n\n              if (existingPortalHolder && record.generation !== existingPortalHolder.generation) {\n                // Remove the old\n                state.portals.delete(existingPortalHolder.portal);\n\n                _this2.setState({\n                  generation: state.generation++\n                });\n\n                existingPortalHolder = null;\n              } // Cell not previously rendered, create a portal for it\n\n\n              if (!existingPortalHolder) {\n                // Create a portal holder, an element that we will render the portal to.\n                // Separate since we are going to hide it or remove it when no longer visible\n                cellElement.innerHTML = \"<div class=\\\"b-react-portal-holder\\\" data-portal=\\\"\".concat(portalId, \"\\\"></div>\"); // Get the portal holder created above\n\n                var portalHolder = cellElement.firstElementChild; // Create a portal targeting the holder (will belong to the existing React tree)\n\n                var portal = ReactDOM.createPortal(cellContent, portalHolder, portalId); // Link to element, for easy retrieval later\n\n                cellElementData.hasReactPortal = true;\n                cellElementData.portalHolder = portalHolder;\n                portalHolder.portal = portal; // Store record generation, to be able to detect a change later\n\n                portalHolder.generation = record.generation; // Put holder in a map, to be able to reuse/move it later\n\n                portalHolderMap.set(portalId, portalHolder); // Store portal in state for React to not loose track of it\n\n                state.portals.add(portal);\n\n                _this2.setState({\n                  generation: state.generation++\n                });\n              } // Cell that already has a portal, reuse it\n              else {\n                  // Move it to the cell\n                  cellElement.appendChild(existingPortalHolder); // Show it\n\n                  existingPortalHolder.style.display = ''; // Link it\n\n                  cellElementData.portalHolder = existingPortalHolder;\n                }\n            }\n\n            shouldSetContent = false;\n          }\n\n          return shouldSetContent;\n        }\n      };\n      this.portalHolderMap = new Map(); // Relay properties with names matching this.featureRe to features\n\n      this.features.forEach(function (featureName) {\n        if (featureName in props) {\n          config.features[featureName.replace(_this2.featureRe, '')] = props[featureName];\n        }\n      }); // Handle config (relaying all props except those used for features to scheduler)\n\n      Object.keys(props).forEach(function (propName) {\n        if (!propName.match(_this2.featureRe) && undefined !== props[propName]) {\n          if (propName === 'features') {\n            console.warn('Passing \"features\" object as prop is not supported. Set features one-by-one with \"Feature\" suffix, for example \"timeRangesFeature\".');\n          } else {\n            config[propName] = props[propName];\n          }\n        }\n      }); // console.log(config);\n      // Create the actual scheduler, used as engine for the wrapper\n\n      var engine = this.schedulerInstance = props.schedulerClass ? new props.schedulerClass(config) : new Scheduler(config); // Release any contained React components when a row is removed\n\n      engine.rowManager.on({\n        removeRow: function removeRow(_ref3) {\n          var row = _ref3.row;\n          return row.cells.forEach(function (cell) {\n            return _this2.releaseReactCell(cell);\n          });\n        }\n      }); // Make stores easier to access\n\n      this.resourceStore = engine.resourceStore;\n      this.eventStore = engine.eventStore; // Map all features from schedulerInstance to scheduler to simplify calls\n\n      Object.keys(engine.features).forEach(function (key) {\n        var featureName = key + 'Feature';\n\n        if (!_this2[featureName]) {\n          _this2[featureName] = engine.features[key];\n        }\n      }); // Shortcut to set syncDataOnLoad on the stores\n\n      if (props.syncDataOnLoad) {\n        engine.resourceStore.syncDataOnLoad = true;\n        engine.eventStore.syncDataOnLoad = true;\n      }\n\n      if (config.events) {\n        this.lastEvents = config.events.slice();\n      }\n\n      if (config.resources) {\n        this.lastResources = config.resources.slice();\n      }\n    } // React component removed, destroy engine\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.schedulerInstance.destroy();\n    } // Component about to be updated, from changing a prop using state. React to it depending on what changed and\n    // prevent react from re-rendering our component.\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this3 = this;\n\n      var props = this.props,\n          engine = this.schedulerInstance,\n          excludeProps = ['adapter', 'children', 'columns', 'events', 'eventsVersion', 'features', // #445 React: Scheduler crashes when features object passed as prop\n      'listeners', // #9114 prevents the crash when listeners are changed at runtime\n      'ref', 'resources', 'resourcesVersion', 'timeRanges'].concat(_toConsumableArray(this.features)); // Reflect configuration changes. Since most scheduler configs are reactive the scheduler will update automatically\n\n      Object.keys(props).forEach(function (propName) {\n        // Only apply if prop has changed\n        if (!excludeProps.includes(propName) && !ObjectHelper.isEqual(props[propName], nextProps[propName])) {\n          engine[propName] = nextProps[propName];\n        }\n      });\n\n      if ( // resourceVersion used to flag that data has changed\n      nextProps.resourcesVersion !== props.resourcesVersion || // If not use do deep equality check against previous dataset\n      // TODO: Might be costly for large datasets\n      !('resourcesVersion' in nextProps) && !('resourcesVersion' in props) && !ObjectHelper.isDeeplyEqual(this.lastResources, nextProps.resources)) {\n        engine.resources = nextProps.resources;\n        this.lastResources = nextProps.resources && nextProps.resources.slice();\n      }\n\n      if ( // eventVersion used to flag that data has changed\n      nextProps.eventsVersion !== props.eventsVersion || // If not use do deep equality check against previous dataset\n      // TODO: Might be costly for large datasets\n      !('eventsVersion' in nextProps) && !('eventsVersion' in props) && !ObjectHelper.isDeeplyEqual(this.lastEvents, nextProps.events)) {\n        engine.events = nextProps.events;\n        this.lastEvents = nextProps.events && nextProps.events.slice();\n      } // Reflect feature config changes\n\n\n      this.features.forEach(function (featureName) {\n        var currentProp = props[featureName],\n            nextProp = nextProps[featureName];\n\n        if (featureName in props && !ObjectHelper.isDeeplyEqual(currentProp, nextProp)) {\n          engine.features[featureName.replace(_this3.featureRe, '')].setConfig(nextProp);\n        }\n      }); // Reflect JSX cell changes\n\n      return nextState.generation !== this.state.generation;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'b-react-scheduler-container',\n        ref: function ref(el) {\n          return _this4.el = el;\n        }\n      }, this.state.portals);\n    }\n  }]);\n\n  return BryntumScheduler;\n}(Component);\n\nBryntumScheduler.defaultProps = {\n  viewPreset: 'hourAndDay',\n  barMargin: 2,\n\n  /**\n   * The number of React portals equals the scrolling buffer size\n   * if set to true. The unused portals are removed from memory and DOM\n   * at the cost of rendering performances (scrolling speed).\n   * If set to false (default) the portals and their elements are kept\n   * in memory and DOM.\n   * @config {Boolean}\n   * @default\n   */\n  discardPortals: false\n};\nexport default BryntumScheduler;","map":{"version":3,"sources":["/home/otpl/sites/demo-bryntum/scheduler-4.0.8-trial/examples/react/_shared/build/BryntumScheduler.js"],"names":["_toConsumableArray","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Component","ReactDOM","Scheduler","ObjectHelper","Widget","BryntumScheduler","_Component","_super","_this","_len","length","args","Array","_key","concat","featureRe","features","configs","state","portals","Set","generation","key","get","console","warn","schedulerInstance","value","releaseReactCell","cellElement","cellElementData","_domData","portalHolder","props","discardPortals","portalHolderMap","delete","portal","remove","setState","style","display","componentDidMount","_this2","config","adopt","el","callOnFunctions","processCellEditor","_ref","editor","field","wrapperWidget","name","reactRef","createRef","reactComponent","$$typeof","Symbol","for","Error","editorValidityChecked","Object","defineProperty","enumerable","current","getValue","set","component","misses","filter","fn","join","context","owner","cellEditorContext","setValue","isValid","focus","createPortal","element","reactPortal","add","processCellContent","_ref2","cellContent","record","shouldSetContent","meta","specialRow","portalId","id","columnId","existingPortalHolder","innerHTML","firstElementChild","hasReactPortal","appendChild","Map","forEach","featureName","replace","keys","propName","match","undefined","engine","schedulerClass","rowManager","on","removeRow","_ref3","row","cells","cell","resourceStore","eventStore","syncDataOnLoad","events","lastEvents","slice","resources","lastResources","componentWillUnmount","destroy","shouldComponentUpdate","nextProps","nextState","_this3","excludeProps","includes","isEqual","resourcesVersion","isDeeplyEqual","eventsVersion","currentProp","nextProp","setConfig","render","_this4","createElement","className","ref","defaultProps","viewPreset","barMargin"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * React Scheduler wrapper\n */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // We import scheduler.umd for IE11 compatibility only. If you don't use IE import:\n// import { Scheduler, ObjectHelper, Widget } from 'bryntum-scheduler';\n\nimport { Scheduler, ObjectHelper, Widget } from 'bryntum-scheduler/scheduler.umd'; // Defines a React component that wraps Bryntum Scheduler\n\nvar BryntumScheduler = /*#__PURE__*/function (_Component) {\n  _inherits(BryntumScheduler, _Component);\n\n  var _super = _createSuper(BryntumScheduler);\n\n  function BryntumScheduler() {\n    var _this;\n\n    _classCallCheck(this, BryntumScheduler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.featureRe = /Feature$/;\n    _this.features = ['cellEditFeature', 'cellMenuFeature', 'cellTooltipFeature', 'columnDragToolbarFeature', 'columnLinesFeature', 'columnPickerFeature', 'columnReorderFeature', 'columnResizeFeature', 'dependenciesFeature', 'dependencyEditFeature', 'eventDragCreateFeature', 'eventDragFeature', 'eventDragSelectFeature', 'eventEditFeature', 'eventFilterFeature', 'eventMenuFeature', 'eventResizeFeature', 'eventTooltipFeature', 'filterBarFeature', 'filterFeature', 'groupFeature', 'groupSummaryFeature', 'headerMenuFeature', 'headerZoomFeature', 'labelsFeature', 'nonWorkingTimeFeature', 'panFeature', 'pdfExportFeature', 'quickFindFeature', 'regionResizeFeature', 'resourceTimeRangesFeature', 'rowReorderFeature', 'scheduleMenuFeature', 'scheduleTooltipFeature', 'searchFeature', 'simpleEventEditFeature', 'sortFeature', 'stripeFeature', 'summaryFeature', 'timeAxisHeaderMenuFeature', 'timeRangesFeature', 'treeFeature'];\n    _this.configs = ['allowOverlap', 'animateRemovingRows', 'assignments', 'assignmentStore', 'autoAdjustTimeAxis', 'autoHeight', 'barMargin', 'columnLines', 'columns', 'contextMenuTriggerEvent', 'createEventOnDblClick', 'crudManager', 'defaultResourceImageName', 'dependencyStore', 'disableGridRowModelWarning', 'displayDateFormat', 'emptyText', 'enableDeleteKey', 'enableEventAnimations', 'enableRecurringEvents', 'enableTextSelection', 'endDate', 'endParamName', 'eventBarTextField', 'eventBodyTemplate', 'eventColor', 'eventLayout', 'eventRenderer', 'events', 'eventSelectionDisabled', 'eventStore', 'eventStyle', 'fillLastColumn', 'fillTicks', 'fullRowRefresh', 'hasVisibleEvents', 'height', 'hideHeaders', 'horizontalEventSorterFn', 'loadMask', 'longPressTime', 'maintainSelectionOnDatasetChange', 'managedEventSizing', 'maxHeight', 'maxWidth', 'maxZoomLevel', 'milestoneAlign', 'milestoneCharWidth', 'milestoneLayoutMode', 'minHeight', 'minWidth', 'minZoomLevel', 'mode', 'multiEventSelect', 'partner', 'passStartEndParameters', 'presets', 'readOnly', 'removeUnassignedEvent', 'resizeToFitIncludesHeader', 'resourceColumns', 'resourceImagePath', 'resourceMargin', 'resources', 'resourceStore', 'resourceTimeRanges', 'responsiveLevels', 'rowHeight', 'scrollLeft', 'scrollTop', 'selectedEvents', 'selectionMode', 'showDirty', 'snap', 'snapRelativeToEventStartDate', 'startDate', 'startParamName', 'subGridConfigs', 'tickWidth', 'timeRanges', 'timeResolution', 'triggerSelectionChangeOnRemove', 'useInitialAnimation', 'viewportCenterDate', 'viewPreset', 'weekStartDay', 'width', 'workingTime', 'zoomLevel', 'zoomOnMouseWheel', 'zoomOnTimeAxisDoubleClick'];\n    _this.state = {\n      portals: new Set(),\n      // Needed to trigger refresh when portals change\n      generation: 0\n    };\n    return _this;\n  }\n\n  _createClass(BryntumScheduler, [{\n    key: \"schedulerEngine\",\n    get:\n    /**\n     * @deprecated in favor of schedulerInstance\n     */\n    function get() {\n      console.warn('schedulerEngine is deprecated. Use schedulerInstance instead.');\n      return this.schedulerInstance;\n    } // Defaults for scheduler the scheduler wrapper\n\n  }, {\n    key: \"releaseReactCell\",\n    value:\n    /**\n     * Removes the unused portal (if discardPortals prop is true) or\n     * hides the unused portal (if discardPortals is falsie - default)\n     * @param {HTMLElement} cellElement\n     * @private\n     */\n    function releaseReactCell(cellElement) {\n      var cellElementData = cellElement._domData,\n          portalHolder = cellElement._domData.portalHolder; // Cell already has a react component in it; hide it or remove it\n\n      if (portalHolder) {\n        // Remove portal and its element\n        if (this.props.discardPortals) {\n          var state = this.state,\n              portalHolderMap = this.portalHolderMap; // Remove React portal\n\n          state.portals.delete(portalHolder.portal); // Remove portalHolder from both map and DOM\n\n          portalHolderMap.delete(portalHolder.portal.key);\n          portalHolder.remove();\n          cellElementData.portalHolder = null; // Update state so that React knows something changed\n\n          this.setState({\n            generation: state.generation++\n          });\n        } else {\n          // Hide the portal\n          portalHolder.style.display = 'none';\n        }\n      }\n    } // React component rendered to DOM, render scheduler to it\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var props = this.props,\n          config = {\n        // Use this element as our encapsulating element\n        adopt: this.el,\n        callOnFunctions: true,\n        features: {},\n        // Hook called by engine when requesting a cell editor\n        processCellEditor: function processCellEditor(_ref) {\n          var editor = _ref.editor,\n              field = _ref.field;\n\n          // String etc handled by feature, only care about fns returning React components here\n          if (typeof editor !== 'function') {\n            return;\n          } // Wrap React editor in an empty widget, to match expectations from CellEdit/Editor and make alignment\n          // etc. work out of the box\n\n\n          var wrapperWidget = new Widget({\n            name: field // For editor to be hooked up to field correctly\n\n          }); // Ref for accessing the React editor later\n\n          wrapperWidget.reactRef = React.createRef(); // column.editor is expected to be a function returning a React component (can be JSX). Function is\n          // called with the ref from above, it has to be used as the ref for the editor to wire things up\n\n          var reactComponent = editor(wrapperWidget.reactRef);\n\n          if (reactComponent.$$typeof !== Symbol.for('react.element')) {\n            throw new Error('Expect a React element');\n          }\n\n          var editorValidityChecked = false; // Add getter/setter for value on the wrapper, relaying to getValue()/setValue() on the React editor\n\n          Object.defineProperty(wrapperWidget, 'value', {\n            enumerable: true,\n            get: function get() {\n              return wrapperWidget.reactRef.current.getValue();\n            },\n            set: function set(value) {\n              var component = wrapperWidget.reactRef.current;\n\n              if (!editorValidityChecked) {\n                var misses = ['setValue', 'getValue', 'isValid', 'focus'].filter(function (fn) {\n                  return !(fn in component);\n                });\n\n                if (misses.length) {\n                  throw new Error(\"\\n                                        Missing function\".concat(misses.length > 1 ? 's' : '', \" \").concat(misses.join(', '), \" in \").concat(component.constructor.name, \".\\n                                        Cell editors must implement setValue, getValue, isValid and focus\\n                                    \"));\n                }\n\n                editorValidityChecked = true;\n              }\n\n              var context = wrapperWidget.owner.cellEditorContext;\n              component.setValue(value, context);\n            }\n          }); // Add getter for isValid to the wrapper, mapping to isValid() on the React editor\n\n          Object.defineProperty(wrapperWidget, 'isValid', {\n            enumerable: true,\n            get: function get() {\n              return wrapperWidget.reactRef.current.isValid();\n            }\n          }); // Override widgets focus handling, relaying it to focus() on the React editor\n\n          wrapperWidget.focus = function () {\n            wrapperWidget.reactRef.current.focus && wrapperWidget.reactRef.current.focus();\n          }; // Create a portal, making the React editor belong to the React tree although displayed in a Widget\n\n\n          var portal = ReactDOM.createPortal(reactComponent, wrapperWidget.element);\n          wrapperWidget.reactPortal = portal;\n          var state = _this2.state; // Store portal in state to let React keep track of it (inserted into the Grid component)\n\n          state.portals.add(portal);\n\n          _this2.setState({\n            portals: state.portals,\n            generation: state.generation + 1\n          });\n\n          return {\n            editor: wrapperWidget\n          };\n        },\n        // Hook called by engine when rendering cells, creates portals for JSX supplied by renderers\n        processCellContent: function processCellContent(_ref2) {\n          var cellContent = _ref2.cellContent,\n              cellElement = _ref2.cellElement,\n              cellElementData = _ref2.cellElementData,\n              record = _ref2.record;\n          var shouldSetContent = cellContent != null; // Release any existing React component (remove or hide)\n\n          _this2.releaseReactCell(cellElement); // Detect React component\n\n\n          if (cellContent && cellContent.$$typeof === Symbol.for('react.element')) {\n            // Excluding special rows for now to keep renderers simpler\n            if (!record.meta.specialRow) {\n              var state = _this2.state,\n                  portalHolderMap = _this2.portalHolderMap,\n                  portalId = \"portal-\".concat(record.id, \"-\").concat(cellElementData.columnId); // Get already existing portal holder, exists if cell was previously rendered\n\n              var existingPortalHolder = portalHolderMap.get(portalId); // Record changed, we need a new portal\n\n              if (existingPortalHolder && record.generation !== existingPortalHolder.generation) {\n                // Remove the old\n                state.portals.delete(existingPortalHolder.portal);\n\n                _this2.setState({\n                  generation: state.generation++\n                });\n\n                existingPortalHolder = null;\n              } // Cell not previously rendered, create a portal for it\n\n\n              if (!existingPortalHolder) {\n                // Create a portal holder, an element that we will render the portal to.\n                // Separate since we are going to hide it or remove it when no longer visible\n                cellElement.innerHTML = \"<div class=\\\"b-react-portal-holder\\\" data-portal=\\\"\".concat(portalId, \"\\\"></div>\"); // Get the portal holder created above\n\n                var portalHolder = cellElement.firstElementChild; // Create a portal targeting the holder (will belong to the existing React tree)\n\n                var portal = ReactDOM.createPortal(cellContent, portalHolder, portalId); // Link to element, for easy retrieval later\n\n                cellElementData.hasReactPortal = true;\n                cellElementData.portalHolder = portalHolder;\n                portalHolder.portal = portal; // Store record generation, to be able to detect a change later\n\n                portalHolder.generation = record.generation; // Put holder in a map, to be able to reuse/move it later\n\n                portalHolderMap.set(portalId, portalHolder); // Store portal in state for React to not loose track of it\n\n                state.portals.add(portal);\n\n                _this2.setState({\n                  generation: state.generation++\n                });\n              } // Cell that already has a portal, reuse it\n              else {\n                  // Move it to the cell\n                  cellElement.appendChild(existingPortalHolder); // Show it\n\n                  existingPortalHolder.style.display = ''; // Link it\n\n                  cellElementData.portalHolder = existingPortalHolder;\n                }\n            }\n\n            shouldSetContent = false;\n          }\n\n          return shouldSetContent;\n        }\n      };\n      this.portalHolderMap = new Map(); // Relay properties with names matching this.featureRe to features\n\n      this.features.forEach(function (featureName) {\n        if (featureName in props) {\n          config.features[featureName.replace(_this2.featureRe, '')] = props[featureName];\n        }\n      }); // Handle config (relaying all props except those used for features to scheduler)\n\n      Object.keys(props).forEach(function (propName) {\n        if (!propName.match(_this2.featureRe) && undefined !== props[propName]) {\n          if (propName === 'features') {\n            console.warn('Passing \"features\" object as prop is not supported. Set features one-by-one with \"Feature\" suffix, for example \"timeRangesFeature\".');\n          } else {\n            config[propName] = props[propName];\n          }\n        }\n      }); // console.log(config);\n      // Create the actual scheduler, used as engine for the wrapper\n\n      var engine = this.schedulerInstance = props.schedulerClass ? new props.schedulerClass(config) : new Scheduler(config); // Release any contained React components when a row is removed\n\n      engine.rowManager.on({\n        removeRow: function removeRow(_ref3) {\n          var row = _ref3.row;\n          return row.cells.forEach(function (cell) {\n            return _this2.releaseReactCell(cell);\n          });\n        }\n      }); // Make stores easier to access\n\n      this.resourceStore = engine.resourceStore;\n      this.eventStore = engine.eventStore; // Map all features from schedulerInstance to scheduler to simplify calls\n\n      Object.keys(engine.features).forEach(function (key) {\n        var featureName = key + 'Feature';\n\n        if (!_this2[featureName]) {\n          _this2[featureName] = engine.features[key];\n        }\n      }); // Shortcut to set syncDataOnLoad on the stores\n\n      if (props.syncDataOnLoad) {\n        engine.resourceStore.syncDataOnLoad = true;\n        engine.eventStore.syncDataOnLoad = true;\n      }\n\n      if (config.events) {\n        this.lastEvents = config.events.slice();\n      }\n\n      if (config.resources) {\n        this.lastResources = config.resources.slice();\n      }\n    } // React component removed, destroy engine\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.schedulerInstance.destroy();\n    } // Component about to be updated, from changing a prop using state. React to it depending on what changed and\n    // prevent react from re-rendering our component.\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this3 = this;\n\n      var props = this.props,\n          engine = this.schedulerInstance,\n          excludeProps = ['adapter', 'children', 'columns', 'events', 'eventsVersion', 'features', // #445 React: Scheduler crashes when features object passed as prop\n      'listeners', // #9114 prevents the crash when listeners are changed at runtime\n      'ref', 'resources', 'resourcesVersion', 'timeRanges'].concat(_toConsumableArray(this.features)); // Reflect configuration changes. Since most scheduler configs are reactive the scheduler will update automatically\n\n      Object.keys(props).forEach(function (propName) {\n        // Only apply if prop has changed\n        if (!excludeProps.includes(propName) && !ObjectHelper.isEqual(props[propName], nextProps[propName])) {\n          engine[propName] = nextProps[propName];\n        }\n      });\n\n      if ( // resourceVersion used to flag that data has changed\n      nextProps.resourcesVersion !== props.resourcesVersion || // If not use do deep equality check against previous dataset\n      // TODO: Might be costly for large datasets\n      !('resourcesVersion' in nextProps) && !('resourcesVersion' in props) && !ObjectHelper.isDeeplyEqual(this.lastResources, nextProps.resources)) {\n        engine.resources = nextProps.resources;\n        this.lastResources = nextProps.resources && nextProps.resources.slice();\n      }\n\n      if ( // eventVersion used to flag that data has changed\n      nextProps.eventsVersion !== props.eventsVersion || // If not use do deep equality check against previous dataset\n      // TODO: Might be costly for large datasets\n      !('eventsVersion' in nextProps) && !('eventsVersion' in props) && !ObjectHelper.isDeeplyEqual(this.lastEvents, nextProps.events)) {\n        engine.events = nextProps.events;\n        this.lastEvents = nextProps.events && nextProps.events.slice();\n      } // Reflect feature config changes\n\n\n      this.features.forEach(function (featureName) {\n        var currentProp = props[featureName],\n            nextProp = nextProps[featureName];\n\n        if (featureName in props && !ObjectHelper.isDeeplyEqual(currentProp, nextProp)) {\n          engine.features[featureName.replace(_this3.featureRe, '')].setConfig(nextProp);\n        }\n      }); // Reflect JSX cell changes\n\n      return nextState.generation !== this.state.generation;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'b-react-scheduler-container',\n        ref: function ref(el) {\n          return _this4.el = el;\n        }\n      }, this.state.portals);\n    }\n  }]);\n\n  return BryntumScheduler;\n}(Component);\n\nBryntumScheduler.defaultProps = {\n  viewPreset: 'hourAndDay',\n  barMargin: 2,\n\n  /**\n   * The number of React portals equals the scrolling buffer size\n   * if set to true. The unused portals are removed from memory and DOM\n   * at the cost of rendering performances (scrolling speed).\n   * If set to false (default) the portals and their elements are kept\n   * in memory and DOM.\n   * @config {Boolean}\n   * @default\n   */\n  discardPortals: false\n};\nexport default BryntumScheduler;"]},"metadata":{},"sourceType":"module"}