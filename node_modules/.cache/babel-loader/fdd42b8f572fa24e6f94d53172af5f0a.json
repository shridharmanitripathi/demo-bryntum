{"ast":null,"code":"/**\n * Custom Task store\n *\n * Taken from the original dragfromgrid example\n */\n// we import scheduler.umd for IE11 compatibility only. If you don't use IE import:\n// import {  DateHelper, EventStore  } from 'bryntum-scheduler';\nimport { DateHelper, EventStore } from './../../node_modules/bryntum-scheduler/scheduler.umd.js';\nimport Task from './Task.js';\nexport default class TaskStore extends EventStore {\n  static get defaultConfig() {\n    return {\n      modelClass: Task\n    };\n  }\n\n  rescheduleOverlappingTasks(eventRecord) {\n    if (eventRecord.resource) {\n      const futureEvents = [],\n            earlierEvents = []; // Split tasks into future and earlier tasks\n\n      eventRecord.resource.events.forEach(ev => {\n        if (ev !== eventRecord) {\n          if (ev.startDate >= eventRecord.startDate) {\n            futureEvents.push(ev);\n          } else {\n            earlierEvents.push(ev);\n          }\n        }\n      });\n      futureEvents.sort((a, b) => a.startDate > b.startDate ? 1 : -1);\n      earlierEvents.sort((a, b) => a.startDate > b.startDate ? -1 : 1);\n      this.beginBatch();\n      futureEvents.forEach((ev, i) => {\n        const prev = futureEvents[i - 1] || eventRecord;\n        ev.startDate = DateHelper.max(prev.endDate, ev.startDate);\n      }); // Walk backwards and remove any overlap\n\n      [eventRecord, ...earlierEvents].forEach((ev, i, all) => {\n        const prev = all[i - 1];\n\n        if (ev.endDate > Date.now() && ev !== eventRecord && prev) {\n          ev.setEndDate(DateHelper.min(prev.startDate, ev.endDate), true);\n        }\n      });\n      this.endBatch();\n    }\n  }\n\n}\n;","map":{"version":3,"sources":["/home/otpl/sites/demo-bryntum/src/lib/TaskStore.js"],"names":["DateHelper","EventStore","Task","TaskStore","defaultConfig","modelClass","rescheduleOverlappingTasks","eventRecord","resource","futureEvents","earlierEvents","events","forEach","ev","startDate","push","sort","a","b","beginBatch","i","prev","max","endDate","all","Date","now","setEndDate","min","endBatch"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,yDAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,UAAxB,CAAmC;AACtB,aAAbG,aAAa,GAAG;AACvB,WAAO;AACHC,MAAAA,UAAU,EAAGH;AADV,KAAP;AAGH;;AAEDI,EAAAA,0BAA0B,CAACC,WAAD,EAAc;AACpC,QAAIA,WAAW,CAACC,QAAhB,EAA0B;AACtB,YACIC,YAAY,GAAG,EADnB;AAAA,YAEIC,aAAa,GAAG,EAFpB,CADsB,CAKtB;;AACAH,MAAAA,WAAW,CAACC,QAAZ,CAAqBG,MAArB,CAA4BC,OAA5B,CAAqCC,EAAD,IAAQ;AACxC,YAAIA,EAAE,KAAKN,WAAX,EAAwB;AACpB,cAAIM,EAAE,CAACC,SAAH,IAAgBP,WAAW,CAACO,SAAhC,EAA2C;AACvCL,YAAAA,YAAY,CAACM,IAAb,CAAkBF,EAAlB;AACH,WAFD,MAGK;AACDH,YAAAA,aAAa,CAACK,IAAd,CAAmBF,EAAnB;AACH;AACJ;AACJ,OATD;AAWAJ,MAAAA,YAAY,CAACO,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,SAAF,GAAcI,CAAC,CAACJ,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA7D;AACAJ,MAAAA,aAAa,CAACM,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,SAAF,GAAcI,CAAC,CAACJ,SAAhB,GAA4B,CAAC,CAA7B,GAAiC,CAA9D;AAEA,WAAKK,UAAL;AAEAV,MAAAA,YAAY,CAACG,OAAb,CAAqB,CAACC,EAAD,EAAKO,CAAL,KAAW;AAC5B,cAAMC,IAAI,GAAGZ,YAAY,CAACW,CAAC,GAAG,CAAL,CAAZ,IAAuBb,WAApC;AAEAM,QAAAA,EAAE,CAACC,SAAH,GAAed,UAAU,CAACsB,GAAX,CAAeD,IAAI,CAACE,OAApB,EAA6BV,EAAE,CAACC,SAAhC,CAAf;AACH,OAJD,EAtBsB,CA4BtB;;AACA,OAACP,WAAD,EAAc,GAAGG,aAAjB,EAAgCE,OAAhC,CAAwC,CAACC,EAAD,EAAKO,CAAL,EAAQI,GAAR,KAAgB;AACpD,cAAMH,IAAI,GAAGG,GAAG,CAACJ,CAAC,GAAG,CAAL,CAAhB;;AAEA,YAAIP,EAAE,CAACU,OAAH,GAAaE,IAAI,CAACC,GAAL,EAAb,IAA2Bb,EAAE,KAAKN,WAAlC,IAAiDc,IAArD,EAA2D;AACvDR,UAAAA,EAAE,CAACc,UAAH,CAAc3B,UAAU,CAAC4B,GAAX,CAAeP,IAAI,CAACP,SAApB,EAA+BD,EAAE,CAACU,OAAlC,CAAd,EAA0D,IAA1D;AACH;AACJ,OAND;AAQA,WAAKM,QAAL;AACH;AACJ;;AA/C6C;AAgDjD","sourcesContent":["/**\n * Custom Task store\n *\n * Taken from the original dragfromgrid example\n */\n// we import scheduler.umd for IE11 compatibility only. If you don't use IE import:\n// import {  DateHelper, EventStore  } from 'bryntum-scheduler';\nimport { DateHelper, EventStore } from './../../node_modules/bryntum-scheduler/scheduler.umd.js';\nimport Task from './Task.js';\n\nexport default class TaskStore extends EventStore {\n    static get defaultConfig() {\n        return {\n            modelClass : Task\n        };\n    }\n\n    rescheduleOverlappingTasks(eventRecord) {\n        if (eventRecord.resource) {\n            const\n                futureEvents = [],\n                earlierEvents = [];\n\n            // Split tasks into future and earlier tasks\n            eventRecord.resource.events.forEach((ev) => {\n                if (ev !== eventRecord) {\n                    if (ev.startDate >= eventRecord.startDate) {\n                        futureEvents.push(ev);\n                    }\n                    else {\n                        earlierEvents.push(ev);\n                    }\n                }\n            });\n\n            futureEvents.sort((a, b) => a.startDate > b.startDate ? 1 : -1);\n            earlierEvents.sort((a, b) => a.startDate > b.startDate ? -1 : 1);\n\n            this.beginBatch();\n\n            futureEvents.forEach((ev, i) => {\n                const prev = futureEvents[i - 1] || eventRecord;\n\n                ev.startDate = DateHelper.max(prev.endDate, ev.startDate);\n            });\n\n            // Walk backwards and remove any overlap\n            [eventRecord, ...earlierEvents].forEach((ev, i, all) => {\n                const prev = all[i - 1];\n\n                if (ev.endDate > Date.now() && ev !== eventRecord && prev) {\n                    ev.setEndDate(DateHelper.min(prev.startDate, ev.endDate), true);\n                }\n            });\n\n            this.endBatch();\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}